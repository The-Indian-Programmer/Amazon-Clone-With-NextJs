import React, { useState, useEffect } from "react";
import { useRouter } from "next/router";
import Head from "next/head";
import Header from "../components/Header/Header";
import Footer from "../components/Footer/Footer";
import ReactStars from "react-rating-stars-component";
import Carousel from "react-multi-carousel";
import "react-multi-carousel/lib/styles.css";
import Image from "next/image";
import { useDispatch, useSelector } from "react-redux";
import { addToCart } from "../../store/index";
import { toast } from "tailwind-toast";
import Script from "next/script";
import Loader from "../components/Loader/Loader";
const ProductId = () => {
  const dispatch = useDispatch();
  const router = useRouter();
  const [id, setId] = useState(router.query.id);
  const [loading, setLoading] = useState(false);
  const responsive = {
    desktop: {
      breakpoint: { max: 3000, min: 1024 },
      items: 3,
      slidesToSlide: 3, // optional, default to 1.
    },
    tablet: {
      breakpoint: { max: 1024, min: 464 },
      items: 2,
      slidesToSlide: 2, // optional, default to 1.
    },
    mobile: {
      breakpoint: { max: 464, min: 0 },
      items: 1,
      slidesToSlide: 1, // optional, default to 1.
    },
  };
  const basket = useSelector((state) => state.basket);

  const [rating] = useState(Math.floor(Math.random() * (5 - 1 + 1)) + 1);
  const [product, setProduct] = useState([]);
  const [recommendedProduct, setRecommendedProduct] = useState([]);

  useEffect(async () => {
    setLoading(true);
    const res = await fetch(`https://fakestoreapi.com/products/${parseInt(id)}`)
      .then((result) => result.json())
      .catch((error) => {
        console.log(error);
      });
    setProduct(res);
    setLoading(false);
  }, [id]);
  useEffect(async () => {
    const res = await fetch(
      `https://fakestoreapi.com/products/category/${product.category}`
    )
      .then((result) => result.json())
      .catch((error) => {
        console.log(error);
      });
    setRecommendedProduct(res);
  }, [product, id]);
  const addTocartItem = async () => {
    for (let i = 0; i < basket.length; i++) {
      if ((basket[i].id === product, id)) {
        return toast()
          .warning("OOPS ! ", "Item already in basket")
          .with({
            duration: 4000,
            speed: 1000,
            positionX: "end",
            positionY: "top",
            color: "bg-yellow-400",
            fontColor: "white",
            fontTone: 200,
          })
          .show();
      }
    }
    const additem = await dispatch(addToCart(product));
    if (additem) {
      toast()
        .success("Good ! ", "Item was Added.")
        .with({
          // shape: "pill",
          duration: 4000,
          speed: 1000,
          positionX: "end",
          positionY: "top",
          color: "bg-green-400",
          fontColor: "white",
          fontTone: 200,
        })
        .show();
    } else {
      toast()
        .success("Sorry ! ", "Can't add item.")
        .with({
          // shape: "pill",
          duration: 4000,
          speed: 1000,
          positionX: "end",
          positionY: "top",
          color: "bg-yellow-400",
          fontColor: "white",
          fontTone: 200,
        })
        .show();
    }
  };
  const pusttoPage = (itemid) => {
    setId(itemid);
    router.push(`/product/${id}`);
  };
  return (
    <div className="productid bg-white">
      <Head>
        <title>Amazon Clone</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css"
          rel="stylesheet"
        />
        <link
          rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"
        />
      </Head>
      <Script
        async
        src="https://cdnjs.cloudflare.com/ajax/libs/vanilla-tilt/1.7.0/vanilla-tilt.min.js"
      ></Script>
      <Header />
      {loading ? (
        <Loader />
      ) : (
        <div
          style={{ marginTop: "5rem" }}
          className="productdetail_info flex flex-col md:flex-row lg:flex-row xl:flex-row justify-center items-center my-4 xl:mx-10 lg-mx-10"
        >
          <div
            style={{
              display: "flex",
              alignItems: "center",
              justifyContent: "center",
              paddingTop: "3rem",
            }}
            className="product_image flex-auto xl:flex-3 md:flex-3 lg:flex-3"
          >
            <Image
              src={
                product.image ||
                "https://fakestoreapi.com/img/61pHAEJ4NML._AC_UX679_.jpg"
              }
              className="productdetailimage h-80"
              height={250}
              width={200}
              objectFit="contain"
              alt=""
            ></Image>
          </div>
          <div
            style={{ flexBasis: "60%" }}
            className="productinfo_detail xl:flex-6 md:flex-6 lg:flex-6 flex flex-col py-6 px-5"
          >
            <h1 className="title font-bold text-2xl">{product.title}</h1>
            <div className="price ">
              <span className="font-bold text-xl">&#8377; </span>{" "}
              {product.price}
            </div>
            <ReactStars
              count={5}
              size={30}
              isHalf={true}
              value={rating}
              edit={false}
              emptyIcon={<i className="far fa-star"></i>}
              halfIcon={<i className="fa fa-star-half-alt"></i>}
              fullIcon={<i className="fa fa-star"></i>}
              activeColor="#d69d00"
            />
            <p className="description">{product.description}</p>
            <button
              onClick={() => addTocartItem()}
              className="addtocart my-5 bg-yellow-500 py-3 rounded-md hover:bg-yellow-400"
            >
              Add To Cart
            </button>
          </div>
        </div>
      )}
      <hr className="mt-5" />
      {loading ? (
        ""
      ) : (
        <div className="similar_products bg-white mt-5">
          <h1 className="similar_text xl:text-3xl md:text-3xl lg:text-3xl mx-5 xl:mx-8 md:mx-8 lg:mx-8">
            Similar Product , You might also like
          </h1>
          <Carousel
            className=" py-5 "
            partialVisible={true}
            swipeable={false}
            draggable={false}
            showDots={true}
            responsive={responsive}
            ssr={true} // means to render carousel on server-side.
            infinite={true}
            autoPlay={responsive.deviceType !== "mobile" ? true : false}
            autoPlaySpeed={1000}
            keyBoardControl={true}
            customTransition="all .5"
            transitionDuration={500}
            containerClass="carousel-container"
            removeArrowOnDeviceType={["tablet", "mobile"]}
            deviceType={responsive.deviceType}
            dotListClass="custom-dot-list-style"
            itemClass="carousel-item-padding-40-px"
          >
            {recommendedProduct.map((item) => {
              return (
                <div
                  key={item.id}
                  onClick={() => pusttoPage(item.id)}
                  className="product rounded-xl h-50 bg-white pt-7 mx-4 pb-2 px-5 md:mx-9 xl:mx-9 h lg:mx-9 hover:shadow-xl"
                >
                  <div className="preview_image relative flex items-center justify-center">
                    <div className="productimage flex justify-center ">
                      <Image
                        className="w-full hover:animate-ping"
                        height={200}
                        width={250}
                        src={
                          item.image ||
                          "https://fakestoreapi.com/img/61pHAEJ4NML._AC_UX679_.jpg"
                        }
                        objectFit="contain"
                        alt="Mountain"
                      ></Image>
                    </div>
                  </div>
                  <div className="h-16 ">
                    <div className="font-bold mb-2 text-wrap text-center d-flex items-center justify-center">
                      {item.title}
                    </div>
                  </div>
                </div>
              );
            })}
          </Carousel>
        </div>
      )}
      <Footer />
    </div>
  );
};

export default ProductId;
